{"version":3,"sources":["stores/index.js","components/ModalButton.js","components/Tile.js","container/Grid.js","container/AppContainer.js","serviceWorker.js","index.js","App.js"],"names":["createStore","bans","ls","get","toggleBan","id","this","includes","newBans","filter","item","set","concat","Object","toConsumableArray","resetBans","StoreContext","createContext","StoreProvider","_ref","children","store","useLocalStore","react_default","a","createElement","Provider","value","useStore","useContext","Error","ModalButton","onClick","image","name","Modal","basic","dimmer","trigger","Button","content","icon","negative","Content","Container","style","display","alignItems","flexDirection","Image","className","size","src","Tile","banned","Popup","inverted","position","width","height","alt","boxShadow","borderRadius","hidden","Icon","color","textShadow","Grid","showBans","champs","filterText","fade","transitions","scaleUp","filterByBans","c","filterByName","toLowerCase","useObserver","lib_default","columnWidth","appear","enter","margin","monitorImagesLoaded","reduce","d","f","map","i","assign","key","CHAMP_URL","keys","champsJson","data","k","full","AppContainer","_useState","useState","_useState2","slicedToArray","chosenChamp","setChosenChamp","_useState3","_useState4","bansVisible","setBansVisible","_useState5","_useState6","textFilter","setTextFilter","filterByText","debounce","text","fluid","textAlign","marginTop","Header","as","subheader","fontSize","href","target","rel","link","ModalButton_ModalButton","rand","Math","floor","random","length","champ","find","_","index","findChamp","circular","Input","placeholder","onChange","e","Checkbox","toggle","checked","marginLeft","Grid_Grid","Segment","GithubCorner_default","Boolean","window","location","hostname","match","ReactDOM","render","stores_StoreProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.204b94aa.chunk.js","sourcesContent":["import React, { createContext, useContext } from \"react\";\nimport ls from \"local-storage\";\nimport { useLocalStore } from \"mobx-react-lite\";\n\nconst createStore = () => {\n  return {\n    bans: ls.get(\"bans\") || [],\n    toggleBan(id) {\n      if (this.bans.includes(id)) {\n        const newBans = this.bans.filter(item => item !== id);\n        ls.set(\"bans\", newBans);\n        this.bans = newBans;\n      } else {\n        const newBans = [...this.bans, id];\n        ls.set(\"bans\", newBans);\n        this.bans = newBans;\n      }\n    },\n    resetBans() {\n      ls.set(\"bans\", []);\n      this.bans = [];\n    }\n  };\n};\n\nexport const StoreContext = createContext(null);\n\nexport const StoreProvider = ({ children }) => {\n  const store = useLocalStore(createStore);\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => {\n  const store = useContext(StoreContext);\n  if (!store) {\n    throw new Error(\"You have forgot to use StoreProvider, shame on you.\");\n  }\n  return store;\n};\n","import React from \"react\";\nimport { Button, Container, Modal, Image } from \"semantic-ui-react\";\n\nexport const ModalButton = ({ onClick, image, name }) => {\n  return (\n    <Modal\n      basic\n      dimmer=\"blurring\"\n      trigger={\n        <Button\n          content=\"CHOOSE YOUR DESTINY\"\n          icon={{ name: \"random\" }}\n          negative\n          onClick={() => onClick && onClick()}\n        />\n      }\n    >\n      <Modal.Content>\n        <Container\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\"\n          }}\n        >\n          <Image className=\"revealed-champ\" size=\"medium\" src={image} />\n          <p className=\"revealed-champ-name\">{name}</p>\n        </Container>\n      </Modal.Content>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { Icon, Popup } from \"semantic-ui-react\";\n\nexport default function({ id, image, name, onClick, banned }) {\n  return (\n    <div onClick={() => onClick && onClick(id)}>\n      <Popup\n        content={name}\n        inverted\n        position=\"bottom center\"\n        trigger={\n          <img\n            className=\"champ\"\n            width={75}\n            height={75}\n            src={image}\n            alt=\"nÃ¼x\"\n            style={{ boxShadow: \"2px 2px 5px black\", borderRadius: 5 }}\n          />\n        }\n      />\n\n      <div className=\"forbid\" hidden={!banned}>\n        <Icon\n          name=\"close\"\n          color=\"red\"\n          size=\"huge\"\n          style={{ textShadow: \"2px 2px 5px black\" }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nimport Tile from \"../components/Tile\";\n\nimport { useObserver } from \"mobx-react-lite\";\nimport { useStore } from \"../stores\";\n\nexport const Grid = ({ showBans, champs, filterText }) => {\n  const { fade, scaleUp } = transitions;\n\n  const store = useStore();\n\n  // const [bans, setBans] = useState(() => ls.get(\"bans\") || []);\n\n  // const toggleBan = id => {\n  //   const bans = ls.get(\"bans\") || [];\n\n  //   if (bans.includes(id)) {\n  //     const newBans = bans.filter(item => item !== id);\n  //     ls.set(\"bans\", newBans);\n  //     setBans(newBans);\n  //   } else {\n  //     const newBans = [...bans, id];\n  //     ls.set(\"bans\", newBans);\n  //     setBans(newBans);\n  //   }\n  // };\n\n  const filterByBans = c => showBans || !store.bans.includes(c.id);\n  const filterByName = c =>\n    filterText ? c.name.toLowerCase().includes(filterText.toLowerCase()) : true;\n  const filters = c =>\n    [filterByName, filterByBans].reduce((d, f) => d.filter(f), c);\n\n  return useObserver(() => (\n    <StackGrid\n      columnWidth={75}\n      appear={fade.appear}\n      enter={scaleUp.enter}\n      style={{ margin: \"0 50px\" }}\n      monitorImagesLoaded={false}\n    >\n      {filters(champs).map(i => (\n        <Tile\n          key={i.id}\n          {...i}\n          onClick={id => store.toggleBan(id)}\n          banned={store.bans.includes(i.id)}\n        />\n      ))}\n    </StackGrid>\n  ));\n};\n","import React, { useState } from \"react\";\nimport champsJson from \"../data/champs_9.14.1\";\nimport {\n  Header,\n  Button,\n  Container,\n  Icon,\n  Input,\n  Checkbox,\n  Popup,\n  Segment\n} from \"semantic-ui-react\";\nimport ls from \"local-storage\";\nimport debounce from \"lodash.debounce\";\nimport { ModalButton } from \"../components/ModalButton\";\nimport { Grid } from \"../container/Grid\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { useStore } from \"../stores\";\nimport GithubCorner from \"react-github-corner\";\n\nconst PATCH_VERSION = \"9.14.1\";\n\nconst CHAMP_URL = `https://ddragon.leagueoflegends.com/cdn/${PATCH_VERSION}/img/champion/`;\n\nconst champs = Object.keys(champsJson.data).map(k => ({\n  id: champsJson.data[k].key,\n  name: champsJson.data[k].name,\n  image: CHAMP_URL + champsJson.data[k].image.full\n}));\n\nexport default function() {\n  const [chosenChamp, setChosenChamp] = useState({});\n  const [bansVisible, setBansVisible] = useState(true);\n  const [textFilter, setTextFilter] = useState(\"\");\n\n  const store = useStore();\n\n  const filterByText = debounce(text => setTextFilter(text), 300);\n\n  const findChamp = () => {\n    const bans = ls.get(\"bans\") || [];\n    const rand = Math.floor(Math.random() * (champs.length - bans.length));\n    const champ = champs\n      .filter(i => !bans.includes(i.id))\n      .find((_, index) => index === rand);\n    setChosenChamp(champ);\n  };\n\n  return useObserver(() => (\n    <Container fluid>\n      <Container textAlign=\"center\" style={{ marginTop: 10 }}>\n        <Header\n          as=\"h1\"\n          size=\"huge\"\n          content=\"rollQ\"\n          subheader=\"aka WÃ¼rfel-Queue\"\n          inverted\n          style={{ margin: 10, fontSize: 66 }}\n        />\n        <Button\n          color=\"violet\"\n          as=\"a\"\n          href=\"https://www.twitch.tv/noway4u_sir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"twitch\" link />\n          /noway4u_sir\n        </Button>\n      </Container>\n      <Container textAlign=\"center\" style={{ margin: \"30px 0\" }}>\n        <ModalButton\n          onClick={() => findChamp()}\n          image={chosenChamp.image}\n          name={chosenChamp.name}\n        />\n        <Popup\n          content=\"Click champs to ban or unban\"\n          trigger={<Icon name=\"info\" circular inverted color=\"grey\" />}\n        />\n      </Container>\n      <Container className=\"controls\" fluid>\n        <Input\n          placeholder=\"Search...\"\n          icon={\n            <Icon\n              name=\"close\"\n              color=\"grey\"\n              inverted\n              circular\n              link\n              onClick={() => {\n                setTextFilter(\"\");\n              }}\n            />\n          }\n          onChange={e => filterByText(e.target.value)}\n        />\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <Checkbox\n            toggle\n            checked={bansVisible}\n            onChange={() => setBansVisible(!bansVisible)}\n          />\n          <p style={{ marginLeft: 15 }}>Show Banned Champs</p>\n        </div>\n        <Popup\n          content=\"Reset all bans\"\n          trigger={<Button icon=\"refresh\" onClick={() => store.resetBans()} />}\n        />\n      </Container>\n      <Grid champs={champs} showBans={bansVisible} filterText={textFilter} />\n      <Container textAlign=\"center\" style={{ margin: \"20px 0 0 0\" }}>\n        <Segment inverted>\n          This is a fan project, all champion images belong to Riot Games |\n          Background wallpaper by{\" \"}\n          <a href=\"http://www.lol-wallpapers.com/wp-content/uploads/2016/12/Bilgewater-Approach.jpg\">\n            lol-wallpapers.com\n          </a>\n        </Segment>\n      </Container>\n      <GithubCorner href=\"https://github.com/y-ahlers/roll-q\" size={60} />\n    </Container>\n  ));\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\nimport { StoreProvider } from \"./stores\";\nimport AppContainer from \"./container/AppContainer\";\n\nexport default function() {\n  return (\n    <StoreProvider>\n      <AppContainer />\n    </StoreProvider>\n  );\n}\n"],"sourceRoot":""}